–Ω–µ –∑–∞–Ω–∏–∂–∞–π—Ç–µ –æ—Ü–µ–Ω–∫—É –ø–ª–∏–∏–∏–∏–∏–∏–∏–∏—Å üçãüçãüçãüçãüçãüçãüçãüçãüçãüçã


class SignUpForm(UserCreationForm):
    class Meta:
        model = User
        fields = 'username', 'password1', 'password2'



class SingInForm(forms.Form):
    username = forms.CharField(label='Username', widget=forms.TextInput())
    password = forms.CharField

    def check_username(self):
        username = self.cleaned_data['username']
        if username in ['–ø–∏–¥–æ—Ä–∞—Å—ã']:
            raise forms.ValidationError(message='—ç—Ç–æ –Ω–µ –ø–∏–¥–æ—Ä–ø—Å—ã —ç—Ç–æ –Ω–µ–ª—é–¥–∏')
        return username

def check_email(self):
    email = self.cleaned_data.get('email')
    if 'spam' in email:
        raise forms.ValidationError("–ê–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ª–æ–≤–æ 'spam'.")
    return email

def check_password(self):
    password1 = self.cleaned_data.get("password1")
    password2 = self.cleaned_data.get("password2")
    if password1 and password2 and password1 != password2:
        raise forms.ValidationError("–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç.")
    return password2